import java.util.Scanner;

public class JetLagCalculator {
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        System.out.println("Enter number of hours of travel:");
        double hoursTravelled = scan.nextInt();
        System.out.println("Enter number of time zones crossed:");
        double zonesCrossed = scan.nextInt();
        System.out.println("Enter time using a 24 hour clock\nEnter the departure time:");
        double depart = scan.nextInt();
        System.out.println("Enter time using a 24 hour clock\nEnter the arrival time");
        double arrive = scan.nextInt();

        if( depart >= 8 && depart < 12) 
            depart = 0;
        else if (depart >= 12 && depart < 18)
            depart = 1;
        else if (depart >= 18 && depart < 22)
            depart = 3;
        else if ((depart >= 22 && depart <= 23) || (depart >= 0 && depart < 1))
            depart = 4;
        else if (depart >= 1 && depart < 8)
            depart = 5;

            if( arrive >= 8 && arrive < 12) 
            arrive = 4;
        else if (arrive >= 12 && arrive < 18)
            arrive = 2;
        else if (arrive >= 18 && arrive < 22)
            arrive = 0;
        else if ((arrive >= 22 && arrive <= 23) || (arrive >= 0 && arrive < 1))
            arrive = 1;
        else if (arrive >= 1 && arrive < 8)
            arrive = 3;
        
        System.out.printf("\n1. Hours = %.0f", hoursTravelled);
        System.out.printf("\n2. Zones = %.0f", zonesCrossed);
        System.out.printf("\n3. Depart = %.0f", depart);
        System.out.printf("\n4. Arrive = %.0f", arrive);

        double daysofrecovery = (hoursTravelled/2 + (zonesCrossed-3) + depart + arrive)/10;
        System.out.printf("\nDays of recovery is %.2f days", daysofrecovery);
    }
}


import java.util.Scanner;

public class AddingupSquaresandCubes {
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        System.out.println("Enter upper limit:");
        int n = scan.nextInt();
        int i = 1;
        int cubes;
        int sumSquares;
        int sumCubes;
        int squares;
        System.out.println("Squares:\tCubes:");
        while (i <= n) {
            cubes = i * i * i;
            squares = i * i;
            System.out.printf("\n%6d\t\t%6d", squares, cubes);
            i++;
        }
        sumSquares = n * (n + 1) * ((2 * n) + 1) / 6;
        sumCubes = (n * n) * ((n + 1) * (n + 1)) / 4;
        System.out.println("\nThe sum of Squares is "+ sumSquares);
        System.out.println("The sum of Cubes is "+ sumCubes);
    }
}


import java.util.Scanner;

public class Powerofanumber {
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        System.out.println("Enter X");
        double x = scan.nextDouble();
        System.out.println("Enter N");
        int n = scan.nextInt();
        double xn = Math.pow(x, n);

        if (n < 0)
            System.out.println("N must be a positive integer.");
        else
            System.out.printf("%.1f raised to the power %d is:  %.6f", x, n, xn);
    }
}


import java.util.Scanner;

public class WedgeofStars {
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        System.out.println("Enter the initial number of stars");
        int stars = scan.nextInt();
        int i;
        int j;
        
        for (i = 0; i < stars; i++){
            for (j = 0; j < stars - i; j++){
                System.out.printf("*");
                
            }
            System.out.println();
        }
    }    
}

public class PineTree {
    public static void main(String[] args) {
        int i ;
        int j ;
        int k ;
        int rows = 8;
        for (i = 0; i < rows; i++) {
            for (j = 0; j < rows - i + 1 ; j++) {
                System.out.printf(" ");  
            }
            for (k = 0; k <= i; k++){
                System.out.printf("* ");
            }
            System.out.printf("\n");
        }

        for (i = 0; i < 3; i++)
            System.out.println("        ***");
    }
}

import java.util.Scanner;

public class WallpaperCalculator {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.println("Enter the dimensions of the room (in feet):");
        System.out.print("Width: ");
        double width = scanner.nextDouble();
        System.out.print("Height: ");
        double height = scanner.nextDouble();
        System.out.print("Length: ");
        double length = scanner.nextDouble();

        double roomArea = 2 * (width * height + height * length);

        System.out.print("Enter the number of openings (windows, doors, etc.): ");
        int numOpenings = scanner.nextInt();

        double openingsArea = 0;
        for (int i = 1; i <= numOpenings; i++) {
            System.out.println("Enter the dimensions of opening " + i + " (in feet):");
            System.out.print("Width: ");
            double openingWidth = scanner.nextDouble();
            System.out.print("Height: ");
            double openingHeight = scanner.nextDouble();
            openingsArea += openingWidth * openingHeight;
        }

        double areaToCover = roomArea - openingsArea;

        double rollWidth = 27.0 / 12.0;
        double rollLength = 4.5 * 3.0;
        double rollArea = rollWidth * rollLength;
        int rollsNeeded = 0;
        double remainingArea = areaToCover;

        while (remainingArea > 0) {
            rollsNeeded++;
            remainingArea -= rollArea;
        }

        System.out.println("You will need " + rollsNeeded + " roll/s of wallpaper.");
    }
}

import java.util.Scanner;

public class FloatFactorial {
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        long N;
        double fact = 1;

        System.out.print("Enter N: ");
        N = scan.nextLong();

        if (N >= 0) {
            while (N > 1) {
                fact = fact * N;
                N = N - 1;
            }
            double previousFactorial = fact / (N + 1); // Calculate (N-1)!
            double factRatio = fact / previousFactorial; // Calculate N! / (N-1)!
            System.out.println("N! / (N-1)! approximation is " + factRatio);
        } else {
            System.out.println("N must be zero or greater");
        }
    }
}



import java.util.Scanner;

public class Permutations {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter a non-negative integer N: ");
        long N = scanner.nextLong();

        System.out.print("Enter a non-negative integer R (R <= N): ");
        long R = scanner.nextLong();

        if (N < 0 || R < 0 || R > N) {
            System.out.println("Error: N and R must be non-negative, and R must be less than or equal to N.");
            return;
        }

        long permutation = 1;
        for (long i = N; i > N - R; i--) {
            permutation *= i;
        }

        System.out.println("Permutation of " + N + " objects taken " + R + " at a time is: " + permutation);
    }
}


import java.util.Random;
import java.util.Scanner;

public class MultiplicationQuiz {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Random random = new Random();

        int correctAnswers = 0;

        for (int i = 0; i < 10; i++) {
            int num1 = random.nextInt(10); // Generate random digit 0-9
            int num2 = random.nextInt(10);

            System.out.print("What is " + num1 + " * " + num2 + "? ");
            int userAnswer = scanner.nextInt();

            int correctAnswer = num1 * num2;
            if (userAnswer == correctAnswer) {
                System.out.println("Right!");
                correctAnswers++;
            } else {
                System.out.println("Wrong. " + num1 + " * " + num2 + " is " + correctAnswer);
            }
        }

        System.out.println("\nYou got " + correctAnswers + " out of 10 questions correct!");
    }
}


