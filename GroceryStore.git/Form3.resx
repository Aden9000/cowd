<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        KFGiRHmM/gGF95CntHx/RQAAAABJRU5ErkJggg==
</value>
  </data>
</root>